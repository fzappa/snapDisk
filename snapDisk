#!/bin/bash
# snapDisk - ZFS Snapshot Management Script
# Alan Franco
# https://github.com/fzappa/snapDisk
#
#
# First version date: 2023/10/16
# Last update date:  2023/10/16

# Function to create a snapshot
create_snapshot() {
  echo "Available datasets:"
  # List available datasets
  sudo zfs list -o name -H
  read -p "Enter the dataset name to create a snapshot: " dataset

  # Check if dataset input is empty
  if [ -z "$dataset" ]; then
    echo "Error: Dataset not recognized."
    exit 1
  fi
  
  local snapshot_name="$(date '+%Y-%m-%d_%H:%M:%S')"
  sudo zfs snapshot "$dataset@$snapshot_name"
  echo "Snapshot created: $dataset@$snapshot_name"
}

# Function to list snapshots with numbers
list_snapshots() {
  local snapshots=( $(sudo zfs list -t snapshot -o name -H -S creation) )
  for ((i = 0; i < ${#snapshots[@]}; i++)); do
    echo "$i. ${snapshots[i]}"
  done
}

# Function to remove snapshots
remove_snapshots() {
  local snapshots=( $(sudo zfs list -t snapshot -o name -H -S creation) )
  for num in "$@"; do
    if [[ $num =~ ^[0-9]+$ ]] && [ $num -ge 0 ] && [ $num -lt ${#snapshots[@]} ]; then
      local snapshot="${snapshots[num]}"
      sudo zfs destroy "$snapshot"
      echo "Snapshot removed: $snapshot"
    else
      echo "Invalid number: $num. Skipping."
    fi
  done
}


help(){
    echo "Usage:"
    echo "$(basename $0) -l or --list       : List snapshots"
    echo "$(basename $0) -c or --create     : Create snapshot"
    echo "$(basename $0) -r or --remove 0 1 : Remove snapshots"
    exit 1
}

# Command-line argument parsing
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -l|--list)
      list_snapshots
      exit 0
      ;;
    -c|--create)
      create_snapshot
      exit 0
      ;;
    -r|--remove)
      shift # remove the -r or --remove argument
      if [ "$#" -eq 0 ]; then
        echo "Error: No snapshot numbers provided for removal."
        echo "Usage: $(basename $0) -r or --remove followed by snapshot numbers (e.g., 0 1)"
        exit 1
      fi
      remove_snapshots "$@"
      exit 0
      ;;
    *)
      echo "Invalid option: $1"
      help
      ;;
  esac
  shift
done

help
